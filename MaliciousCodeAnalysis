Windows API
访问文件系统的API
1、createFile  用来创建新文件，或者打开一个已存在的文件、管道、流、以及IO设备
2、ReadFile和WriteFile 进行文件读写，都将文件作为流来操作。
3、CreateFileMapping和MapViewOfFile 文件映射经常被恶意代码作者使用，因为它允许将一个文件加载到内存中，以便更容易的进行操作。CreateFileMapping函数负责从磁盘上加载一个文件到内存中，MapViewOfFile则返回一个指向映射的基地址指针，它可以用来访问内存中的文件，程序调用这两个函数的，能够使用从MapViewOfFile函数返回的指针，在文件中的任意位置进行读取和写入。这一特性在解析一个文件格式时其顺极其，因为你可以简单的跳转到不同的内存地址。

Windows注册表
注册表是用来保存操作系统与程序的配置信息，比如设置和选项。包括网络驱动、启动项、用户账户、以及其他信息。
恶意代码经常使用注册表来完成持久驻留和存储配置数据。恶意代码添加项到注册表中，这使他在计算机引导时能够自动运行。
根键：注册表被划分为 成为根键的5个顶层节。
子键：一个子键就像是一个文件夹中的子文件夹。
键：一个键是一个注册表中的文件夹，他可以包含额外的文件夹或者键值。根键和子键都是键。
值项：一个值项是一个配对的名字和值
值或数据：存储在注册表项中的数据。

注册表根键
HKEY_LOCAL_MACHINE(HKLM) 保存对本地及其全局设置
HKEY_CURRENT_USER(HKCU) 保存当前用户特定的设置
HKEY_CLASSES_ROOT 保存定义的类型信息
HKEY_CURRENT_CONFIG 保存关于当前硬件配置的设置，特别是与当前和标准配置之间不同的部分
HKEY_USERS 定义默认用户、新用户和当前用户的配置

DLL
动态链接库，一个DLL程序是不能独立运行的可执行文件，但他可以导出一些被其他应用使用的函数。

恶意代码作者如何使用DLL
1、保存恶意代码：有时，恶意代码作者发现将恶意代码保存到一个DLL文件比一个exe文件更加有利。有些恶意代码会附加到其他进程，但是没一个进程只能包含一个exe文件，因此，恶意代码有时使用DLL程序，来讲他自己加载到另外一个进程中。
2、通过使用Window DLL：几乎所有的恶意代码都使用在每个系统上都可以发现的window基础的DLL程序。window DLL程序几乎包含了需要与操作系统交互的功能。而一个恶意程序使用window DLL的方式，经常为恶意代码分析师提供巨大的洞察力。
3、通过使用第三方DLL：恶意代码也可以使用第三方DLL来和其他程序交互，当你看见从一个第三方DLL导入函数的恶意代码时，你可以推断它正在和那个程序交互，来完成他的目标。

基本DLL结构
DLL使用PE文件格式，并且只有一个单一标志，只是这个文件是一个DLL，而不是exe。DLL京城有更多的导出函数，并且通常导入函数较少，除了那个标志之外，一个DLL和exe之间没有实质的区别。
DLL的主函数是Dllmain。他没有标记，而且并不是一个DLL中的导出函数，但是他在PE头中被指定为文件的入口点。任何时候一个进程加载或者卸载库，会创建一个新线程，或者一个已存在的线程结束时，这个函数就会被调用来通知DLL。这个通知允许DLL来管理每一个进程或每个线程的资源。

内核与用户模式
window使用两种处理器特权级别：内核模式和用户模式
在用户模式下，每一个进程有他自己的内存、安全权限、以及资源。如果一个用户模式程序执行一个无效指令并崩溃，window可以回收所有资源，并终止这个程序。
通常，用户模式不能直接访问硬件，并且他被限制只能访问CPU上所有寄存器和可用指令的一个子集。为了在用户模式中操作硬件或者改变内核的状态，你必须依赖于window API。
所有运行在内核的进程共享资源和内存地址。内核模式代码有更少的安全检查。如果在内核运行的代码执行并且包含无效指令，操作系统就不能继续运行，产生的结果就是著名的window蓝屏。
运行在内核模式的恶意代码可以更容易的干扰安全程序和绕过防火墙，但是，开入内核模式代码比开发用户模式代码更加困难，一个主要障碍就是内核代码在开发和调试时更加可能是系统崩溃。另外，许多常用函数在内核中也是不可用的。

内核模式与用户模式调试(使用不同的调试软件包）
在用户模式中，调试器在与被调试的代码运行在通过一个系统中。在用户模式下进行调试时，你调试的是单个可以执行程序，操作系统会将它与其他可执行程序隔离。
由于操作系统只有一个内核，因此内核调试需要两个系统上进行：如果内核中有一个断电，那么就没有任何应用可以在该系统上运行。因此，在进行内核调试时，一个系统运行被调试的代码，另一个运行调试器，除此之外，必须配置操作系统使其开启内核调试功能，并将两个系统连通。
WinDbg是当前唯一支持内核调试的流行调试器。OllyDbg时恶意代码分析人员使用最多的调试器，但是他不支持内核调试。

使用调试器
1、单步调试：每执行一条指令，控制权就返回到调试器。单步调试器能让你看到程序中发生的每一个细节。
2、单步跳过和单步跳入：要控制调试器中看到的指令，你可以使用单步跳过或者单步跳入这些指令。当你单步跳过一条call指令时，将会跳过调用。当单步跳入一个函数时，比较容易快速执行那些与当前分析毫无关系的指令。
3、用断点暂停执行：断点被用来暂停程序的运行状态，并让你查看程序的状态。程序在断点处暂停运行被成为“中断”。程序运行过程中，因为寄存器的值和内存的地址是不断变化的，所以不能访问寄存器的值和内存地址，因此设置断点对调试程序十分必要。

下载器和启动器
下载器：从互联网上下载其他的恶意代码，然后在本地系统中运行。下载器通常会于漏洞利用打包在一起。下载器常用Windows API函数URLDownloadtoFileA和WinExe,来下载并运行新的恶意代码。
启动器：一次可执行的问价，用来安装立即运行或者将来秘密执行的恶意代码。启动器通常包含一个他要加载的恶意代码。

后门


